from sqlalchemy import create_engine, Column, Integer, String, Boolean, DateTime
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

Base = declarative_base()

class Person(Base):
    __tablename__ = 'persons'
    id = Column(Integer, primary_key=True)
    first_name = Column(String)
    last_name = Column(String)
    middle_name = Column(String)
    suffix = Column(String)
    email = Column(String, unique=True)
    address = Column(String)
    primary_phone = Column(String)
    secondary_phone = Column(String)
    active = Column(Boolean)
    birthday = Column(DateTime)
    connector_account_id = Column(String)
    gender = Column(String)
    contact_type = Column(String)
    do_not_call = Column(Boolean)
    h_salesforce_id = Column(String)
    h_salesforce_account_id = Column(String)
    secondary_email = Column(String)
    home_email = Column(String)
    work_email = Column(String)
    prefered_email = Column(String)
    country_code = Column(String)
    city = Column(String)
    state = Column(String)
    postal_code = Column(String)
    preferred_phone = Column(String)
    h_owner_id = Column(String)
    opt_out_email = Column(Boolean)
    opt_out_phone = Column(Boolean)
    h_created_date = Column(DateTime)
    h_salesforce_primary_aff = Column(String)
    h_org_name = Column(String)
    age_group = Column(String)
    do_not_contact = Column(Boolean)
    h_connector_join_date = Column(DateTime)
    h_connector_last_login_date = Column(DateTime)
    h_connecotr_join_date = Column(DateTime)
    h_connector_id = Column(String)
    h_first_volunteer_date = Column(DateTime)
    h_num_of_attended_sessions = Column(Integer)
    h_num_of_noshow_sessions = Column(Integer)
    h_org_name_reported = Column(String)
    person_of_color = Column(Boolean)
    racial_ethnic_background = Column(String)
    status = Column(String)
    h_last_email_message = Column(String)
    h_connector_last_update = Column(DateTime)
    h_connector_signup_role = Column(String)
    h_last_completed_task = Column(String)
    connector_active_subscription = Column(Boolean)
    created_at = Column(DateTime)
    updated_at = Column(DateTime)
    deleted_at = Column(DateTime)

class Volunteer(Base):
    __tablename__ = 'volunteers'
    id = Column(Integer, primary_key=True)
    title = Column(String)
    primary_affiliation_id = Column(String)
    education_background = Column(String)
    last_mailchimp_email_date = Column(DateTime)
    last_volunteer_date = Column(DateTime)
    h_interests = Column(String)
    h_skills_text = Column(String)
    h_skills = Column(String)
    person = relationship("Person", backref="volunteer")

# Database setup
engine = create_engine('sqlite:///volunteers.db')
Base.metadata.create_all(engine)

